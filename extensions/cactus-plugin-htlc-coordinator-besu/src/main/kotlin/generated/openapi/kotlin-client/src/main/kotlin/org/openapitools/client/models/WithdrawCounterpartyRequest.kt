/**
 * Hyperledger Cactus Plugin - HTLC Coordinator
 *
 * Can exchange assets between networks
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.HtlcPackage
import org.openapitools.client.models.Web3SigningCredential

import com.squareup.moshi.Json

/**
 * 
 *
 * @param htlcPackage 
 * @param connectorInstanceId connector Instance Id for the connector plugin
 * @param keychainId keychainId for the keychain plugin
 * @param web3SigningCredential 
 * @param htlcId Id for the HTLC
 * @param secret Counterparty HTLC secret
 * @param contractId contractId for the contract
 * @param gas 
 */

data class WithdrawCounterpartyRequest (

    @Json(name = "htlcPackage")
    val htlcPackage: HtlcPackage,

    /* connector Instance Id for the connector plugin */
    @Json(name = "connectorInstanceId")
    val connectorInstanceId: kotlin.String,

    /* keychainId for the keychain plugin */
    @Json(name = "keychainId")
    val keychainId: kotlin.String,

    @Json(name = "web3SigningCredential")
    val web3SigningCredential: Web3SigningCredential,

    /* Id for the HTLC */
    @Json(name = "htlcId")
    val htlcId: kotlin.String,

    /* Counterparty HTLC secret */
    @Json(name = "secret")
    val secret: kotlin.String,

    /* contractId for the contract */
    @Json(name = "contractId")
    val contractId: kotlin.String? = null,

    @Json(name = "gas")
    val gas: java.math.BigDecimal? = null

)

