/*
Hyperledger Cactus Plugin - Keychain Memory 

Contains/describes the Hyperledger Cactus Keychain Memory plugin.

API version: v2.0.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-keychain-memory

import (
	"encoding/json"
)

// checks if the SetKeychainEntryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetKeychainEntryResponse{}

// SetKeychainEntryResponse struct for SetKeychainEntryResponse
type SetKeychainEntryResponse struct {
	// The key that was used to set the value on the keychain.
	Key string `json:"key"`
}

// NewSetKeychainEntryResponse instantiates a new SetKeychainEntryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetKeychainEntryResponse(key string) *SetKeychainEntryResponse {
	this := SetKeychainEntryResponse{}
	this.Key = key
	return &this
}

// NewSetKeychainEntryResponseWithDefaults instantiates a new SetKeychainEntryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetKeychainEntryResponseWithDefaults() *SetKeychainEntryResponse {
	this := SetKeychainEntryResponse{}
	return &this
}

// GetKey returns the Key field value
func (o *SetKeychainEntryResponse) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *SetKeychainEntryResponse) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *SetKeychainEntryResponse) SetKey(v string) {
	o.Key = v
}

func (o SetKeychainEntryResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetKeychainEntryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["key"] = o.Key
	return toSerialize, nil
}

type NullableSetKeychainEntryResponse struct {
	value *SetKeychainEntryResponse
	isSet bool
}

func (v NullableSetKeychainEntryResponse) Get() *SetKeychainEntryResponse {
	return v.value
}

func (v *NullableSetKeychainEntryResponse) Set(val *SetKeychainEntryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSetKeychainEntryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSetKeychainEntryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetKeychainEntryResponse(val *SetKeychainEntryResponse) *NullableSetKeychainEntryResponse {
	return &NullableSetKeychainEntryResponse{value: val, isSet: true}
}

func (v NullableSetKeychainEntryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetKeychainEntryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


