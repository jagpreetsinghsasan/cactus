/**
 * Hyperledger Cactus Plugin - Connector Besu
 *
 * Can perform basic tasks on a Besu ledger
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.BesuPrivateTransactionConfig
import org.openapitools.client.models.EthContractInvocationType
import org.openapitools.client.models.OneOfLessThanStringCommaNumberGreaterThan
import org.openapitools.client.models.Web3SigningCredential

import com.squareup.moshi.Json

/**
 * 
 *
 * @param contractName 
 * @param signingCredential 
 * @param invocationType 
 * @param methodName The name of the contract method to invoke.
 * @param params The list of arguments to pass in to the contract method being invoked.
 * @param contractAbi The application binary interface of the solidity contract, optional parameter
 * @param contractAddress Address of the solidity contract, optional parameter
 * @param `value` 
 * @param gas 
 * @param gasPrice 
 * @param nonce 
 * @param timeoutMs The amount of milliseconds to wait for a transaction receipt beforegiving up and crashing. Only has any effect if the invocation type is SEND
 * @param keychainId The keychainId for retrieve the contracts json.
 * @param privateTransactionConfig 
 */

data class InvokeContractV1Request (

    @Json(name = "contractName")
    val contractName: kotlin.String,

    @Json(name = "signingCredential")
    val signingCredential: Web3SigningCredential,

    @Json(name = "invocationType")
    val invocationType: EthContractInvocationType,

    /* The name of the contract method to invoke. */
    @Json(name = "methodName")
    val methodName: kotlin.String,

    /* The list of arguments to pass in to the contract method being invoked. */
    @Json(name = "params")
    val params: kotlin.collections.List<kotlin.Any> = arrayListOf(),

    /* The application binary interface of the solidity contract, optional parameter */
    @Json(name = "contractAbi")
    val contractAbi: kotlin.collections.List<kotlin.Any>? = null,

    /* Address of the solidity contract, optional parameter */
    @Json(name = "contractAddress")
    val contractAddress: kotlin.String? = null,

    @Json(name = "value")
    val `value`: OneOfLessThanStringCommaNumberGreaterThan? = null,

    @Json(name = "gas")
    val gas: OneOfLessThanStringCommaNumberGreaterThan? = null,

    @Json(name = "gasPrice")
    val gasPrice: OneOfLessThanStringCommaNumberGreaterThan? = null,

    @Json(name = "nonce")
    val nonce: java.math.BigDecimal? = null,

    /* The amount of milliseconds to wait for a transaction receipt beforegiving up and crashing. Only has any effect if the invocation type is SEND */
    @Json(name = "timeoutMs")
    val timeoutMs: java.math.BigDecimal? = null,

    /* The keychainId for retrieve the contracts json. */
    @Json(name = "keychainId")
    val keychainId: kotlin.String? = null,

    @Json(name = "privateTransactionConfig")
    val privateTransactionConfig: BesuPrivateTransactionConfig? = null

)

