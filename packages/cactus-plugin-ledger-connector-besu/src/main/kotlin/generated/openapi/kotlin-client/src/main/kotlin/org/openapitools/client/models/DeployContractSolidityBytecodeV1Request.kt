/**
* Hyperledger Cactus Plugin - Connector Besu
* Can perform basic tasks on a Besu ledger
*
* The version of the OpenAPI document: 0.0.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models

import org.openapitools.client.models.AnyType
import org.openapitools.client.models.BesuPrivateTransactionConfig
import org.openapitools.client.models.Web3SigningCredential

import com.squareup.moshi.Json

/**
 * 
 * @param contractName The contract name for retrieve the contracts json on the keychain.
 * @param contractAbi The application binary interface of the solidity contract
 * @param constructorArgs 
 * @param web3SigningCredential 
 * @param bytecode See https://ethereum.stackexchange.com/a/47556 regarding the maximum length of the bytecode
 * @param keychainId The keychainId for retrieve the contracts json.
 * @param gas 
 * @param gasPrice 
 * @param timeoutMs The amount of milliseconds to wait for a transaction receipt with theaddress of the contract(which indicates successful deployment) beforegiving up and crashing.
 * @param privateTransactionConfig 
 */

data class DeployContractSolidityBytecodeV1Request (
    /* The contract name for retrieve the contracts json on the keychain. */
    @Json(name = "contractName")
    val contractName: kotlin.String,
    /* The application binary interface of the solidity contract */
    @Json(name = "contractAbi")
    val contractAbi: kotlin.collections.List<AnyType>,
    @Json(name = "constructorArgs")
    val constructorArgs: kotlin.collections.List<AnyType>,
    @Json(name = "web3SigningCredential")
    val web3SigningCredential: Web3SigningCredential,
    /* See https://ethereum.stackexchange.com/a/47556 regarding the maximum length of the bytecode */
    @Json(name = "bytecode")
    val bytecode: kotlin.String,
    /* The keychainId for retrieve the contracts json. */
    @Json(name = "keychainId")
    val keychainId: kotlin.String,
    @Json(name = "gas")
    val gas: java.math.BigDecimal? = null,
    @Json(name = "gasPrice")
    val gasPrice: kotlin.String? = null,
    /* The amount of milliseconds to wait for a transaction receipt with theaddress of the contract(which indicates successful deployment) beforegiving up and crashing. */
    @Json(name = "timeoutMs")
    val timeoutMs: java.math.BigDecimal? = null,
    @Json(name = "privateTransactionConfig")
    val privateTransactionConfig: BesuPrivateTransactionConfig? = null
)

