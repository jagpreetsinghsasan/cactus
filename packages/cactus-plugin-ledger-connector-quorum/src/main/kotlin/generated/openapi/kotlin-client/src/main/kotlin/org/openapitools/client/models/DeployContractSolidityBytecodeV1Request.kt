/**
 * Hyperledger Cactus Plugin - Connector Quorum
 *
 * Can perform basic tasks on a Quorum ledger
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.Web3SigningCredential

import com.squareup.moshi.Json

/**
 * 
 *
 * @param contractName The contract name for retrieve the contracts json on the keychain.
 * @param web3SigningCredential 
 * @param keychainId The keychainId for retrieve the contracts json.
 * @param gas 
 * @param gasPrice 
 * @param timeoutMs The amount of milliseconds to wait for a transaction receipt with theaddress of the contract(which indicates successful deployment) beforegiving up and crashing.
 * @param contractJSON For use when not using keychain, pass the contract in as this variable
 * @param constructorArgs The list of arguments to pass in to the constructor of the contract being deployed.
 */

data class DeployContractSolidityBytecodeV1Request (

    /* The contract name for retrieve the contracts json on the keychain. */
    @Json(name = "contractName")
    val contractName: kotlin.String,

    @Json(name = "web3SigningCredential")
    val web3SigningCredential: Web3SigningCredential,

    /* The keychainId for retrieve the contracts json. */
    @Json(name = "keychainId")
    val keychainId: kotlin.String,

    @Json(name = "gas")
    val gas: java.math.BigDecimal? = null,

    @Json(name = "gasPrice")
    val gasPrice: kotlin.String? = null,

    /* The amount of milliseconds to wait for a transaction receipt with theaddress of the contract(which indicates successful deployment) beforegiving up and crashing. */
    @Json(name = "timeoutMs")
    val timeoutMs: java.math.BigDecimal? = null,

    /* For use when not using keychain, pass the contract in as this variable */
    @Json(name = "contractJSON")
    val contractJSON: kotlin.Any? = null,

    /* The list of arguments to pass in to the constructor of the contract being deployed. */
    @Json(name = "constructorArgs")
    val constructorArgs: kotlin.collections.List<kotlin.Any>? = null

)

