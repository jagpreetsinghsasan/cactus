/**
* Hyperledger Cactus Plugin - Connector Quorum
* Can perform basic tasks on a Quorum ledger
*
* The version of the OpenAPI document: 0.0.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models

import org.openapitools.client.models.Web3SigningCredentialCactusKeychainRef
import org.openapitools.client.models.Web3SigningCredentialGethKeychainPassword
import org.openapitools.client.models.Web3SigningCredentialNone
import org.openapitools.client.models.Web3SigningCredentialPrivateKeyHex
import org.openapitools.client.models.Web3SigningCredentialType

import com.squareup.moshi.Json

/**
 * 
 * @param type 
 * @param ethAccount The ethereum account (public key) that the credential belongs to. Basically the username in the traditional terminology of authentication.
 * @param secret The HEX encoded private key of an eth account.
 * @param keychainEntryKey The key to use when looking up the the keychain entry holding the secret pointed to by the  keychainEntryKey parameter.
 * @param keychainId The keychain ID to use when looking up the the keychain plugin instance that will be used to retrieve the secret pointed to by the keychainEntryKey parameter.
 */

interface Web3SigningCredential {

    @Json(name = "type")
    val type: Web3SigningCredentialType
    /* The ethereum account (public key) that the credential belongs to. Basically the username in the traditional terminology of authentication. */
    @Json(name = "ethAccount")
    val ethAccount: kotlin.String
    /* The HEX encoded private key of an eth account. */
    @Json(name = "secret")
    val secret: kotlin.String
    /* The key to use when looking up the the keychain entry holding the secret pointed to by the  keychainEntryKey parameter. */
    @Json(name = "keychainEntryKey")
    val keychainEntryKey: kotlin.String
    /* The keychain ID to use when looking up the the keychain plugin instance that will be used to retrieve the secret pointed to by the keychainEntryKey parameter. */
    @Json(name = "keychainId")
    val keychainId: kotlin.String?
}

