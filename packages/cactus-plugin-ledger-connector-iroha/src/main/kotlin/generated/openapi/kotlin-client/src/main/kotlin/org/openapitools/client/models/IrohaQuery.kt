/**
 * Hyperledger Cactus Plugin - Connector Iroha
 *
 * Can perform basic tasks on a Iroha ledger
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json

/**
 * 
 *
 * Values: GetAccount,GetAccountDetail,GetAssetInfo,GetAccountAssets,GetTransactions,GetPendingTransactions,GetAccountTransactions,GetAccountAssetTransactions,GetRoles,GetSignatories,GetRolePermissions,GetBlock,GetEngineReceipts,FetchCommits,GetPeers
 */

enum class IrohaQuery(val value: kotlin.String) {

    @Json(name = "getAccount")
    GetAccount("getAccount"),

    @Json(name = "getAccountDetail")
    GetAccountDetail("getAccountDetail"),

    @Json(name = "getAssetInfo")
    GetAssetInfo("getAssetInfo"),

    @Json(name = "getAccountAssets")
    GetAccountAssets("getAccountAssets"),

    @Json(name = "getTransactions")
    GetTransactions("getTransactions"),

    @Json(name = "getPendingTransactions")
    GetPendingTransactions("getPendingTransactions"),

    @Json(name = "getAccountTransactions")
    GetAccountTransactions("getAccountTransactions"),

    @Json(name = "getAccountAssetTransactions")
    GetAccountAssetTransactions("getAccountAssetTransactions"),

    @Json(name = "getRoles")
    GetRoles("getRoles"),

    @Json(name = "getSignatories")
    GetSignatories("getSignatories"),

    @Json(name = "getRolePermissions")
    GetRolePermissions("getRolePermissions"),

    @Json(name = "getBlock")
    GetBlock("getBlock"),

    @Json(name = "getEngineReceipts")
    GetEngineReceipts("getEngineReceipts"),

    @Json(name = "fetchCommits")
    FetchCommits("fetchCommits"),

    @Json(name = "getPeers")
    GetPeers("getPeers");

    /**
     * Override toString() to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: Any?): kotlin.String? = if (data is IrohaQuery) "$data" else null

        /**
         * Returns a valid [IrohaQuery] for [data], null otherwise.
         */
        fun decode(data: Any?): IrohaQuery? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

