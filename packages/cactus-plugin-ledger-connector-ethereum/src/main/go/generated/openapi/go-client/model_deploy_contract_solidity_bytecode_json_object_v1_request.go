/*
Hyperledger Cactus Plugin - Connector Ethereum

Can perform basic tasks on a Ethereum ledger

API version: v2.0.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-ethereum

import (
	"encoding/json"
)

// checks if the DeployContractSolidityBytecodeJsonObjectV1Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeployContractSolidityBytecodeJsonObjectV1Request{}

// DeployContractSolidityBytecodeJsonObjectV1Request struct for DeployContractSolidityBytecodeJsonObjectV1Request
type DeployContractSolidityBytecodeJsonObjectV1Request struct {
	Web3SigningCredential Web3SigningCredential `json:"web3SigningCredential"`
	GasConfig *GasTransactionConfig `json:"gasConfig,omitempty"`
	// The amount of milliseconds to wait for a transaction receipt with theaddress of the contract(which indicates successful deployment) beforegiving up and crashing.
	TimeoutMs *float32 `json:"timeoutMs,omitempty"`
	ContractJSON ContractJSON `json:"contractJSON"`
	// The list of arguments to pass in to the constructor of the contract being deployed.
	ConstructorArgs []interface{} `json:"constructorArgs,omitempty"`
}

// NewDeployContractSolidityBytecodeJsonObjectV1Request instantiates a new DeployContractSolidityBytecodeJsonObjectV1Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployContractSolidityBytecodeJsonObjectV1Request(web3SigningCredential Web3SigningCredential, contractJSON ContractJSON) *DeployContractSolidityBytecodeJsonObjectV1Request {
	this := DeployContractSolidityBytecodeJsonObjectV1Request{}
	this.Web3SigningCredential = web3SigningCredential
	var timeoutMs float32 = 60000
	this.TimeoutMs = &timeoutMs
	this.ContractJSON = contractJSON
	return &this
}

// NewDeployContractSolidityBytecodeJsonObjectV1RequestWithDefaults instantiates a new DeployContractSolidityBytecodeJsonObjectV1Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployContractSolidityBytecodeJsonObjectV1RequestWithDefaults() *DeployContractSolidityBytecodeJsonObjectV1Request {
	this := DeployContractSolidityBytecodeJsonObjectV1Request{}
	var timeoutMs float32 = 60000
	this.TimeoutMs = &timeoutMs
	return &this
}

// GetWeb3SigningCredential returns the Web3SigningCredential field value
func (o *DeployContractSolidityBytecodeJsonObjectV1Request) GetWeb3SigningCredential() Web3SigningCredential {
	if o == nil {
		var ret Web3SigningCredential
		return ret
	}

	return o.Web3SigningCredential
}

// GetWeb3SigningCredentialOk returns a tuple with the Web3SigningCredential field value
// and a boolean to check if the value has been set.
func (o *DeployContractSolidityBytecodeJsonObjectV1Request) GetWeb3SigningCredentialOk() (*Web3SigningCredential, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Web3SigningCredential, true
}

// SetWeb3SigningCredential sets field value
func (o *DeployContractSolidityBytecodeJsonObjectV1Request) SetWeb3SigningCredential(v Web3SigningCredential) {
	o.Web3SigningCredential = v
}

// GetGasConfig returns the GasConfig field value if set, zero value otherwise.
func (o *DeployContractSolidityBytecodeJsonObjectV1Request) GetGasConfig() GasTransactionConfig {
	if o == nil || isNil(o.GasConfig) {
		var ret GasTransactionConfig
		return ret
	}
	return *o.GasConfig
}

// GetGasConfigOk returns a tuple with the GasConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployContractSolidityBytecodeJsonObjectV1Request) GetGasConfigOk() (*GasTransactionConfig, bool) {
	if o == nil || isNil(o.GasConfig) {
		return nil, false
	}
	return o.GasConfig, true
}

// HasGasConfig returns a boolean if a field has been set.
func (o *DeployContractSolidityBytecodeJsonObjectV1Request) HasGasConfig() bool {
	if o != nil && !isNil(o.GasConfig) {
		return true
	}

	return false
}

// SetGasConfig gets a reference to the given GasTransactionConfig and assigns it to the GasConfig field.
func (o *DeployContractSolidityBytecodeJsonObjectV1Request) SetGasConfig(v GasTransactionConfig) {
	o.GasConfig = &v
}

// GetTimeoutMs returns the TimeoutMs field value if set, zero value otherwise.
func (o *DeployContractSolidityBytecodeJsonObjectV1Request) GetTimeoutMs() float32 {
	if o == nil || isNil(o.TimeoutMs) {
		var ret float32
		return ret
	}
	return *o.TimeoutMs
}

// GetTimeoutMsOk returns a tuple with the TimeoutMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployContractSolidityBytecodeJsonObjectV1Request) GetTimeoutMsOk() (*float32, bool) {
	if o == nil || isNil(o.TimeoutMs) {
		return nil, false
	}
	return o.TimeoutMs, true
}

// HasTimeoutMs returns a boolean if a field has been set.
func (o *DeployContractSolidityBytecodeJsonObjectV1Request) HasTimeoutMs() bool {
	if o != nil && !isNil(o.TimeoutMs) {
		return true
	}

	return false
}

// SetTimeoutMs gets a reference to the given float32 and assigns it to the TimeoutMs field.
func (o *DeployContractSolidityBytecodeJsonObjectV1Request) SetTimeoutMs(v float32) {
	o.TimeoutMs = &v
}

// GetContractJSON returns the ContractJSON field value
func (o *DeployContractSolidityBytecodeJsonObjectV1Request) GetContractJSON() ContractJSON {
	if o == nil {
		var ret ContractJSON
		return ret
	}

	return o.ContractJSON
}

// GetContractJSONOk returns a tuple with the ContractJSON field value
// and a boolean to check if the value has been set.
func (o *DeployContractSolidityBytecodeJsonObjectV1Request) GetContractJSONOk() (*ContractJSON, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractJSON, true
}

// SetContractJSON sets field value
func (o *DeployContractSolidityBytecodeJsonObjectV1Request) SetContractJSON(v ContractJSON) {
	o.ContractJSON = v
}

// GetConstructorArgs returns the ConstructorArgs field value if set, zero value otherwise.
func (o *DeployContractSolidityBytecodeJsonObjectV1Request) GetConstructorArgs() []interface{} {
	if o == nil || isNil(o.ConstructorArgs) {
		var ret []interface{}
		return ret
	}
	return o.ConstructorArgs
}

// GetConstructorArgsOk returns a tuple with the ConstructorArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployContractSolidityBytecodeJsonObjectV1Request) GetConstructorArgsOk() ([]interface{}, bool) {
	if o == nil || isNil(o.ConstructorArgs) {
		return nil, false
	}
	return o.ConstructorArgs, true
}

// HasConstructorArgs returns a boolean if a field has been set.
func (o *DeployContractSolidityBytecodeJsonObjectV1Request) HasConstructorArgs() bool {
	if o != nil && !isNil(o.ConstructorArgs) {
		return true
	}

	return false
}

// SetConstructorArgs gets a reference to the given []interface{} and assigns it to the ConstructorArgs field.
func (o *DeployContractSolidityBytecodeJsonObjectV1Request) SetConstructorArgs(v []interface{}) {
	o.ConstructorArgs = v
}

func (o DeployContractSolidityBytecodeJsonObjectV1Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeployContractSolidityBytecodeJsonObjectV1Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["web3SigningCredential"] = o.Web3SigningCredential
	if !isNil(o.GasConfig) {
		toSerialize["gasConfig"] = o.GasConfig
	}
	if !isNil(o.TimeoutMs) {
		toSerialize["timeoutMs"] = o.TimeoutMs
	}
	toSerialize["contractJSON"] = o.ContractJSON
	if !isNil(o.ConstructorArgs) {
		toSerialize["constructorArgs"] = o.ConstructorArgs
	}
	return toSerialize, nil
}

type NullableDeployContractSolidityBytecodeJsonObjectV1Request struct {
	value *DeployContractSolidityBytecodeJsonObjectV1Request
	isSet bool
}

func (v NullableDeployContractSolidityBytecodeJsonObjectV1Request) Get() *DeployContractSolidityBytecodeJsonObjectV1Request {
	return v.value
}

func (v *NullableDeployContractSolidityBytecodeJsonObjectV1Request) Set(val *DeployContractSolidityBytecodeJsonObjectV1Request) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployContractSolidityBytecodeJsonObjectV1Request) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployContractSolidityBytecodeJsonObjectV1Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployContractSolidityBytecodeJsonObjectV1Request(val *DeployContractSolidityBytecodeJsonObjectV1Request) *NullableDeployContractSolidityBytecodeJsonObjectV1Request {
	return &NullableDeployContractSolidityBytecodeJsonObjectV1Request{value: val, isSet: true}
}

func (v NullableDeployContractSolidityBytecodeJsonObjectV1Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployContractSolidityBytecodeJsonObjectV1Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


